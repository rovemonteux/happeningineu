-#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

!!!
%html{:lang => content_language(clean_content(yield(:page_description))), :dir => (rtl?) ? 'rtl' : 'ltr'}
  %head
    %meta{:charset => 'utf-8'}/

    %title
      = page_title clean_content(yield(:page_title))

    %meta{:name => 'content-language', :content => content_language(clean_content(yield(:page_description))) }/

    %meta{:name => 'description', :content => clean_content(yield(:page_description)) }/

    %meta{:name => 'keywords', :content => yield(:page_keywords) }/

    %meta{:name => 'author', :content => yield(:page_author) }/

    %meta{:property => 'og:title', :content => clean_content(yield(:page_title)) }/

    %meta{:property => 'og:description', :content => clean_content(yield(:page_description)) }/

    %meta{'http-equiv' => 'X-UA-Compatible', :content => 'IE=edge,chrome=1'}/

    %meta{"http-equiv"=>"Content-Type", :content=>"text/html; charset=utf-8"}/

    %link{:rel => 'shortcut icon', :href => '/favicon.png'}/
    %link{:rel => 'apple-touch-icon', :href => '/apple-touch-icon.png'}/


    / Social Media Icons are by Paul Robert Lloyd @ http://paulrobertlloyd.com/2009/06/social_media_icons

    / Application icons are by Everaldo Coelho @ http://everaldo.com/crystal/

    / bootstrap/blueprint switch
    - if @aspect == :getting_started || @page == :logged_out
      = stylesheet_link_tag "bootstrap.min.css"
    - else
      = stylesheet_link_tag "blueprint/screen", :media => 'screen'
      = stylesheet_link_tag "blueprint/print", :media => 'print'

    = stylesheet_link_tag "login", :media => 'screen'

    = stylesheet_link_tag "diaspora_default", :media => 'screen'

    - if rtl?
      = include_stylesheets :rtl, :media => 'all'

    = csrf_meta_tag
    <!--[if IE]>
    = javascript_include_tag "/javascripts/ie.js"
    <![endif]-->

    = include_javascripts :jquery

    - unless @landing_page
      = javascript_include_tag "/javascripts/default.js"
      :javascript
        Diaspora.I18n.loadLocale(#{get_javascript_strings_for(I18n.locale).to_json}, "#{I18n.locale}");
        Diaspora.Page = "#{params[:controller].camelcase}#{params[:action].camelcase}";
    - if current_user
      = include_javascripts :flash_socket #unless modern_browser?
      = javascript_include_tag 'web-socket-receiver'
      = render 'js/websocket_js'

    :javascript
      $(document).ready(function() {
      $(".trigger").click(function(){
      $(".panel").toggle("fast");
      $(this).toggleClass("active");
      return false;
      });
      });

    = yield(:head)

    -unless Rails.env == "production" 
      :css
        .translation_missing {
          color: purple;
          background-color: red;
        }
    -if AppConfig[:google_a_site]
      :javascript
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', '#{AppConfig[:google_a_site]}']);
        _gaq.push(['_trackPageview']);

        (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();

    -if AppConfig[:piwik_id]
      :javascript
        var pkBaseURL = (("https:" == document.location.protocol) ? "https://#{AppConfig[:piwik_url]}/" : "http://#{AppConfig[:piwik_url]}/");
        document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
      :javascript
        try {
        var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", #{AppConfig[:piwik_id]});
        piwikTracker.trackPageView();
        piwikTracker.enableLinkTracking();
        } catch( err ) {}

    - if @person
      %link{:rel => "alternate", :href => "#{@person.public_url}.atom", :type => "application/atom+xml", :title => "#{t('.public_feed', :name => @person.name)}"}

  %body{:class => "#{yield(:body_class)}"}

    - unless @page == :logged_out
      - flash.each do |name, msg|
        %div{:id => "flash_#{name}"}
          .message
            = msg

    - unless @landing_page
      %a{:id=>"back-to-top", :title=>"Back to top", :href=>"#"}
        &#8679;

      #notifications

    %header{:class=>('landing' unless current_user), :style => "background-image: url(/images/header-bg.png);"}
      = render 'layouts/header'

    .container{:style=> "#{yield(:break_the_mold)}"}
      - if @aspsect == :getting_started || @page == :logged_out
        = yield
      - else
        .span-24.last{:style=> "#{yield(:break_the_mold)}"}
          = yield

    %footer
      .container
        #footertags
          - ActiveRecord::Base.connection.select_values('select name, count(name) as counter from tags LEFT JOIN taggings ON taggings.tag_id = tags.id WHERE created_at > DATE_SUB(CONCAT(CURDATE(), \' 00:00:00\'), INTERVAL '+ AppConfig[:trends_hours] +' HOUR) AND name NOT LIKE \'%rss%\' GROUP BY name ORDER BY counter DESC, name ASC LIMIT 0,60;').each do |tagname|
            = link_to("#"+"#{tagname}", "/tags/#{tagname}")
            &nbsp;&middot;&nbsp;
        %br
        %ul#footer_nav
          %li= link_to t('terms_and_conditions'), AppConfig[:pod_url] + "disclaimer.html"
          %li= link_to 'Podmin', AppConfig[:pod_url] + "u/" + AppConfig[:pod_min]
          %li= link_to t('layouts.header.blog'), AppConfig[:pod_blog]
          %li= link_to t('layouts.header.code'), "https://github.com/rovemonteux/happeningineu"
          %li= link_to(t('layouts.application.toggle'), toggle_mobile_path)  if is_mobile_device?  
        %span{:style => "font-size: 9px;"}
          Powered by&nbsp;
          = link_to('Happening in EU (happeningin.eu)', 'https://github.com/rovemonteux/happeningineu') 
