-#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

.stream_element{:id => post.guid, :class => from_group(post)}
  .right.controls
    = block_user_control(post.author)
    = delete_or_hide_button(post)

    = image_tag 'ajax-loader.gif', :class => "hide_loader hidden"

  .indicator{:title => "#{what_stream_sentence(post)}"}
    = stream_settings_link(post)

  .sm_body
    %br
    = person_image_link(post.author, :size => :thumb_small)
    .content
      .post-content
        = nsfw_sheild(post)
        - if post.activity_streams?
          = link_to image_tag(post.image_url, 'data-small-photo' => post.image_url, 'data-full-photo' => post.image_url, :class => 'stream-photo'), post.object_url, :class => "stream-photo-link"
        - elsif reshare?(post)
          = render 'reshares/reshare', :reshare => post, :post => post.root
        - else
          = render 'status_messages/status_message', :post => post, :photos => post.photos

      .post_initial_info
        %span.from
          = person_link(post.author, :class => 'hovercardable')
          %time.time.timeago{:datetime => post.created_at, :integer => time_for_sort(post).to_i}

        %span.details
          –
          %span.timeago
            = link_to(how_long_ago(post), post_path(post))
          - if post.reshares_count > 0
            –
            %span.num_reshares
              = t("reshares.reshare.reshare", :count => post.reshares.size)

      .info
        %span.via
          - if post.activity_streams?
            = t('.via', :link => link_to("#{post.provider_display_name}", post.actor_url)).html_safe
            &ndash;
          - elsif post.provider_display_name == 'mobile'
            = t('.via', :link => nil)
            mobile
            &ndash;

        - if post.public?
          %span.post_scope{:title => t('.viewable_to_anyone')}
            = t('public')
            &ndash;
        - else
          - if user_signed_in? && post.author.owner_id == current_user.id
            - aspects = aspects_with_post(all_aspects, post)
            %span.post_scope{:title => t('.shared_with', :aspect_names => aspects.map!{|a| a.name}.join(', '))}
              - if aspects.size == 1
                = aspects.first
              - else
                = t('limited')
                (#{aspects.size})
          - else
            %span.post_scope
              = t('limited')
          &ndash;


        - if commenting_disabled?(post)
          %span.federated_person{:title => "#{t('.connect_to_comment')}"}
            ="[#{t('.currently_unavailable')}]"
        - else
          %span
            = link_to(t('_photos').titleize, "/people/" + post.author.id.to_s + "/photos") 
          &middot;
          %span.like_action
            = like_action(post, current_user)

          - if resharable?(post)
            ·
            %span.reshare_action
              = reshare_link(post)
          ·

          = link_to t('comments.new_comment.comment'), '#', :class => 'focus_comment_textarea'

        - if post.public?
          - if !post.text.blank?
            %br
            .sharebar{:style => "padding: 5px;"}
              = link_to image_tag("/images/social_media_logos/identica-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://identi.ca/index.php?action=newnotice&status_textarea=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + CGI::escape(" https://" + AppConfig[:pod_uri].host + post_path(post)) + "', 'sharer', 'toolbar=0,status=0,width=650,height=400');", :title => "Identi.ca", :alt => "Identi.ca", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/twitter-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://twitter.com/home?status=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + CGI::escape(" https://" + AppConfig[:pod_uri].host + post_path(post)) + "', 'sharer', 'toolbar=0,status=0,width=650,height=325');", :title => "Twitter", :alt => "Twitter", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/tumblr-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://www.tumblr.com/share/link?url=" + CGI::escape(" https://" + AppConfig[:pod_uri].host + post_path(post)) + "&name=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + "&description=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 1000).split.join(' ')) + CGI::escape(" https://" + AppConfig[:pod_uri].host + post_path(post)) + "', 'sharer', 'toolbar=0,status=0,width=750,height=600');", :title => "Tumblr", :alt => "Tumblr", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/facebook-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://www.facebook.com/sharer.php?u=" + CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "&t=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + "', 'sharer', 'toolbar=0,status=0,width=650,height=325');", :title => "Facebook", :alt => "Facebook", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/reddit-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"),  "javascript: void(0)", :onclick => "window.open('https://reddit.com/submit?url=" + CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "&title=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + "', 'sharer', 'toolbar=0,status=0,width=700,height=450');", :title => "Reddit", :alt => "Reddit", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/stumbleupon-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"),   "javascript: void(0)", :onclick => "window.open('https://www.stumbleupon.com/submit?url=" + CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "&title=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 112).split.join(' ')) + "', 'sharer', 'toolbar=0,status=0,width=750,height=600');", :title => "Stumble Upon", :alt => "Stumble Upon", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/google+-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://plusone.google.com/_/+1/confirm?url=" + CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "', 'sharer', 'toolbar=0,status=0,width=650,height=600');", :title => "Google+", :alt => "Google+", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/myspace-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://www.myspace.com/Modules/PostTo/Pages/?t=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 120).split.join(' ')) + "&c=" +  CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 800).split.join(' ')) + CGI::escape(" - https://" + AppConfig[:pod_uri].host + post_path(post)) + "&u=" +  CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "', 'sharer', 'toolbar=0,status=0,width=650,height=400');", :title => "MySpace", :alt => "MySpace", :rel => "nofollow"
              = link_to image_tag("/images/social_media_logos/newsvine-16x16.png", :width => "10px", :height => "10px", :class => "social_icon"), "javascript: void(0)", :onclick => "window.open('https://www.newsvine.com/_tools/seed&save?u=" + CGI::escape("https://" + AppConfig[:pod_uri].host + post_path(post)) + "&h=" + CGI::escape(truncate(post.text.gsub(%r{</?[^>]+?>}, '').gsub(/[()]/, " ").gsub(/[\[\]]/, " ").gsub(/[##]/, "").gsub(/(?:f|ht)tps?:\/[^\s]+/, ''), :length => 120).split.join(' ')) + "', 'sharer', 'toolbar=0,status=0,width=700,height=500');", :title => "Newsvine", :alt => "Newsvine", :rel => "nofollow"

      .likes.on_post
        .likes_container
          = render "likes/likes_container", :target_id => post.id, :likes_count => post.likes_count, :current_user => current_user, :target_type => "Post"

      = render "comments/comments", :post => post, :current_user => current_user, :commenting_disabled => commenting_disabled?(post)
